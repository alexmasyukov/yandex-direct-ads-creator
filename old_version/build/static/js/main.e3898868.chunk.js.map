{"version":3,"sources":["components/Filter/Word/Word.module.sass","components/Filter/Keyword/Keyword.module.sass","components/Filter/Informer/Informer.module.sass","assets/download-arrow.svg","components/Filter/SpinButton/SpinModule.module.sass","store/reducers/titles.js","data/oneKeywords.js","store/actionTypes.js","store/reducers/ads.js","store/reducers/titlesDataGrid.js","store/rootReducer.js","store/configStore.js","components/Filter/Word/index.js","components/Filter/Keyword/index.js","components/Filter/Informer/index.js","components/Filter/SpinButton/index.js","components/Filter/Panel/index.js","pages/Filter.js","App.js","serviceWorker.js","index.js","components/Filter/Panel/Panel.module.sass"],"names":["module","exports","initialState","data","titles","keywords","maxOneTitleLenght","maxTwoTitleLenght","deleteNeedless","addNeedless","firstToUpperCase","state","action","type","payload","companyName","region","secondTitle","manually","title","descriptions","linkUrl","linkVisible","fastLinks","description","url","csv","ads","lastTimeGeneratedAds","adsGenerationProcess","console","log","titlesDataGrid","rootReducer","combineReducers","titlesPageCache","adsPageCache","titlesDataGridCache","store","createStore","subscribe","getState","Word","id","word","unactive","isNotUse","onClick","cls","styles","push","className","join","Keyword","keyword","Informer","minusWords","activeKeywords","informer","cn","red","SpinButton","loadingTitle","variant","useState","isLoading","setLoading","useEffect","Promise","resolve","setTimeout","then","Button","btn","Panel","minusWordsCount","activeKeywordsCount","onClickInmportKeywords","onClickCopyKeywords","onClickCopyMinusWords","panel","src","arrowDown","arrow","initialKeywords","Filter","props","words","handleWordClick","bind","handleCopyKeywords","handleCopyMinusWords","importKeywordsFromClipboard","map","i","this","setState","setWords","key","array","Array","from","Set","reduce","values","item","split","importSampleKeywords","setKeywords","app","navigator","clipboard","readText","text","catch","err","wordsByOnlyActiveKeywords","includes","unactiveStatus","trim","filterWords","index","findIndex","status","prevState","filterKeywords","filter","textField","document","createElement","value","body","appendChild","select","execCommand","remove","copyToClipboard","convertActiveKeywordsToText","getActiveKeywords","convertMinusWordsToText","getMinusWords","length","md","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"sGACAA,EAAOC,QAAU,CAAC,KAAO,mBAAmB,SAAW,uBAAuB,SAAW,yB,mBCAzFD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,SAAW,4B,mBCAhED,EAAOC,QAAU,CAAC,SAAW,2BAA2B,IAAM,wB,mBCD9DD,EAAOC,QAAU,IAA0B,4C,mBCC3CD,EAAOC,QAAU,CAAC,IAAM,0B,kvBCExB,IAAMC,EAAe,CACnBC,KAAM,GACNC,OAAQ,GACRC,SCNyB,CACzB,wFACA,kFACA,iHACA,yIACA,gJACA,oIACA,uKACA,kKACA,wHACA,6JACA,wHACA,yIACA,gMACA,gLACA,iJACA,6HACA,yKACA,yMACA,yKACA,8MACA,wKACA,yIACA,gJACA,0NACA,oIACA,mIACA,sJACA,mIACA,4MACA,iMACA,iJACA,6HACA,wNACA,uHACA,uMACA,uHACA,oKACA,+KACA,iOACA,oHACA,qLACA,gJACA,oIACA,iMACA,6HACA,qOACA,qJACA,kKACA,qLACA,iHACA,kNACA,gJACA,kKACA,yKACA,uHACA,gLACA,2JACA,uJACA,oLACA,6HACA,kKACA,mKACA,qJACA,iHACA,0LACA,0IACA,2LACA,mIACA,+NACA,qGACA,mIACA,iHACA,4MACA,oIACA,8KACA,6HACA,8MACA,oIACA,yIACA,mIACA,oNACA,yKACA,gMACA,8KACA,gJACA,4OACA,qLACA,uHACA,6HACA,mIACA,kKACA,wKACA,4LACA,0IACA,kNACA,mKACA,kMACA,gJACA,+IACA,+FACA,kFACA,2GACA,wHDhGAC,kBAAmB,GACnBC,kBAAmB,GACnBC,eAAgB,CACd,SACA,eACA,eACA,0DACA,qBACA,KACA,eACA,SACA,eACA,SACA,SACA,mDACA,gEACA,yDACA,eACA,wCAEFC,YAAa,CACX,KAEFC,iBAAkB,CAChB,6BAmCWN,EA/BA,WAAmC,IAAlCO,EAAiC,uDAAzBT,EAAcU,EAAW,uCAC/C,OAAQA,EAAOC,MACb,IE/BgC,wBFgC9B,OAAO,EAAP,GACKF,EADL,GAEKC,EAAOE,SAGd,IE3CoB,WF4ClB,OAAO,EAAP,GACKH,EAD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","file":"static/js/main.e3898868.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"word\":\"Word_word__19xuu\",\"unactive\":\"Word_unactive__ZaMxq\",\"isNotUse\":\"Word_isNotUse__L1EXR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"keyword\":\"Keyword_keyword__1OSOo\",\"unactive\":\"Keyword_unactive__pmxr3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"informer\":\"Informer_informer__3_OJO\",\"red\":\"Informer_red__3kNa_\"};","module.exports = __webpack_public_path__ + \"static/media/download-arrow.3ecf211b.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"SpinModule_btn__kv0tK\"};","import * as types from \"store/actionTypes\"\nimport { oneKeywords } from \"data/oneKeywords\"\n\nconst initialState = {\n  data: [],\n  titles: [],\n  keywords: oneKeywords,\n  maxOneTitleLenght: 30,\n  maxTwoTitleLenght: 35,\n  deleteNeedless: [\n    'в',\n    'на',\n    'из',\n    'в интернет',\n    'для',\n    'ru',\n    'ру',\n    'с',\n    'по',\n    'и',\n    'м',\n    'интернет',\n    'в интернете',\n    'интернете',\n    'от',\n    'россия'\n  ],\n  addNeedless: [\n    '!'\n  ],\n  firstToUpperCase: [\n    'чита'\n  ]\n}\n\nconst titles = (state = initialState, action) => {\n  switch (action.type) {\n    case types.SET_TITLES_PAGE_CACHE:\n      return {\n        ...state,\n        ...action.payload\n      }\n\n    case types.SET_DATA:\n      return {\n        ...state,\n        data: action.payload\n      }\n\n    // case types.UPDATE_TITLES:\n    //   return {\n    //     ...state,\n    //     titles: action.payload\n    //   }\n    //\n    // case types.UPDATE_FORM_FIELD:\n    //   return {\n    //     ...state,\n    //     ...action.payload\n    //   }\n\n  }\n\n  return state\n}\n\nexport default titles","export const oneKeywords = [\n  'доставка цветов',\n  'доставка цвета',\n  'доставка цветов чита',\n  'доставка цветов недорого',\n  'заказать цветы с доставкой',\n  'заказ цветов с доставкой',\n  'доставка цветов круглосуточно',\n  'доставка цветов чита недорого',\n  'доставка цветов на дом',\n  'заказ цветов с доставкой чита',\n  'доставка цветом на дом',\n  'доставка цветов курьером',\n  'доставка цветов чита круглосуточно',\n  'заказать цветы с доставкой в чите',\n  'чита доставка цветов на дом',\n  'доставка цветов дешево',\n  'доставка цветов на дом недорого',\n  'доставка цветов в чите недорого на дом',\n  'доставка цветов в чите курьером',\n  'заказ цветов с доставкой чита недорого',\n  'заказ доставки цветов недорого',\n  'интернет доставка цветов',\n  'магазин цветов с доставкой',\n  'доставка цветов в чите курьером недорого',\n  'купить цветы с доставкой',\n  'доставка цветов каталог',\n  'доставка цветов чита дешево',\n  'телефон доставки цветов',\n  'доставка цветов круглосуточно дешево',\n  'заказать цветы с доставкой недорого',\n  'доставка цветов день в день',\n  'служба доставки цветов',\n  'доставка цветов круглосуточно недорого',\n  'салон цветов доставка',\n  'доставка цветов на дом круглосуточно',\n  'номер доставки цветов',\n  'купить цветы в чите с доставкой',\n  'цветы через интернет с доставкой',\n  'заказать цветы с доставкой в чите недорого',\n  'доставка цветов 24 часа',\n  'заказать цветы дешево с доставкой',\n  'доставка цветов город чита',\n  'букет цветов с доставкой',\n  'интернет магазин цветов с доставкой',\n  'доставка цветов онлайн',\n  'доставка цветов чита круглосуточно дешево',\n  'доставка цветов инстаграмм',\n  'доставка цветов оплата картой',\n  'заказать букет цветов с доставкой',\n  'живые цветы доставка',\n  'курьер доставка круглосуточная цветов',\n  'подарить цветы с доставкой',\n  'сколько стоит доставка цветов',\n  'заказ цветов онлайн с доставкой',\n  'адрес доставки цветов',\n  'цветы с доставкой с днем рождения',\n  'доставка цветов официальный',\n  'заказ цветов на дом доставка',\n  'доставка цветов официальный сайт',\n  'доставка цветов скидка',\n  'доставка букетов живых цветов',\n  'доставка цветов на дом дешевле',\n  'курьерская доставка цветов',\n  'доставка цветов сайт',\n  'курьерская служба доставки цветов',\n  'доставка цветов по городу',\n  'доставка цветов по номеру телефона',\n  'доставка цветов девушке',\n  'заказать цветы с доставкой круглосуточно',\n  'доставка цветов вк',\n  'доставка цветов подруге',\n  'доставка цветов цены',\n  'заказ цветов доставкой круглосуточно',\n  'оплата и доставка цветов',\n  'букеты цветов доставка курьером',\n  'клумба доставка цветов',\n  'сколько стоит букет цветов с доставкой',\n  'доставка цветов на карте',\n  'компания доставка цветов',\n  'условия доставки цветов',\n  'купить цветы через интернет с доставкой',\n  'заказать доставку цветов на дом',\n  'доставка цветов безналичный расчет',\n  'заказать онлайн доставка цветов',\n  'доставка цветов на свадьбу',\n  'заказать цветы интернет магазин с доставкой',\n  'купить цветы недорого с доставкой',\n  'доставка цветов зимой',\n  'большие цветы доставка',\n  'доставка цветов контакт',\n  'доставка цветов через курьера',\n  'доставка цветов букет недорого',\n  'заказ цветов доставка в день заказа',\n  'цветы букет цены доставка',\n  'круглосуточная служба доставки цветов',\n  'где заказать цветы с доставкой',\n  'где можно заказать цветы с доставкой',\n  'доставка цветов со скидкой',\n  'доставка цветов инстаграм',\n  'цветы с доставкой',\n  'цветы курьером',\n  'цветы через курьера',\n  'букет цветов курьером',\n]","export const SET_DATA = 'SET_DATA'\nexport const UPDATE_KEYWORDS = 'UPDATE_KEYWORDS'\nexport const UPDATE_TITLES = 'UPDATE_TITLES'\nexport const UPDATE_FORM_FIELD = 'UPDATE_FORM_FIELD'\n\nexport const SET_ADS_PAGE_CACHE ='SET_ADS_PAGE_CACHE'\nexport const SET_TITLES_PAGE_CACHE ='SET_TITLES_PAGE_CACHE'\n\nexport const SET_TITLES_DATAGRID_CACHE ='SET_TITLES_DATAGRID_CACHE'\n\n// export const UPDATE_MAX_ONE_TITLE_LENGHT = 'UPDATE_MAX_ONE_TITLE_LENGHT'\n// export const UPDATE_MAX_TWO_TITLE_LENGHT = 'UPDATE_MAX_TWO_TITLE_LENGHT'\n// export const UPDATE_DELETE_NEEDLESS = 'UPDATE_DELETE_NEEDLESS'\n// export const UPDATE_ADD_NEEDLESS = 'UPDATE_ADD_NEEDLESS'\n// export const UPDATE_TO_UPPER_FIRST_CASE = 'UPDATE_TO_UPPER_FIRST_CASE'\n","import * as types from \"store/actionTypes\"\n\nconst initialState = {\n  companyName: 'Тестовая_Поиск',\n  region: 'Забайкальский край',\n  secondTitle: {\n    manually: true,\n    title: 'Дарите с удовольствием!' //Дарите с удовольствием! Безупречное качество Ваш букет будет лучшим!\n  },\n  descriptions: [\n    'Свежие букеты цветов и букеты в шляпных коробках с быстрой доставкой по Чите!',\n    'Вернём деньги за доставку, если опоздываем более 5 минут!',\n    'Мы делаем красивые букеты из 100% свежих цветов! Доставка - 24/7. Закажите!'\n  ],\n  linkUrl: 'https://klumba.store/',\n  linkVisible: 'Цветы',\n  fastLinks: [\n    {\n      title: 'Каталог',\n      description: '',\n      url: 'https://klumba.store/catalog'\n    },\n    {\n      title: 'Доставка',\n      description: '',\n      url: 'https://klumba.store/delivery'\n    },\n    {\n      title: 'Контакты',\n      description: '',\n      url: 'https://klumba.store/contacts'\n    },\n    {\n      title: 'О нас',\n      description: '',\n      url: 'https://klumba.store/about'\n    }\n  ],\n  csv: '',\n  ads: [],\n  lastTimeGeneratedAds: '',\n  adsGenerationProcess: true\n}\n\nconst ads = (state = initialState, action) => {\n  switch (action.type) {\n    case types.SET_ADS_PAGE_CACHE:\n      return {\n        ...state,\n        ...action.payload\n      }\n\n    case types.SET_TITLES_PAGE_CACHE:\n      console.log('reducer SET_TITLES_PAGE_CACHE');\n      return {\n        ...state,\n        ...action.payload\n      }\n\n    case types.UPDATE_FORM_FIELD:\n      return {\n        ...state,\n        ...action.payload\n      }\n  }\n\n  return state\n}\n\nexport default ads","import * as types from \"store/actionTypes\";\n\nconst initialState = []\n\nconst titlesDataGrid = (state = initialState, action) => {\n  switch (action.type) {\n    case types.SET_TITLES_DATAGRID_CACHE:\n      // console.log('aciton payload SET_TITLES_DATAGRID_CACHE', action.payload);\n      return [...action.payload]\n  }\n\n  return state\n}\n\nexport default titlesDataGrid","import { combineReducers } from \"redux\"\nimport titles from './reducers/titles'\nimport ads from './reducers/ads'\nimport titlesDataGrid from './reducers/titlesDataGrid'\n\nconst rootReducer = combineReducers({\n  // titles,\n  titlesPageCache: titles,\n  adsPageCache: ads,\n  titlesDataGridCache: titlesDataGrid\n})\n\nexport default rootReducer","import { createStore } from 'redux'\nimport rootReducer from \"store/rootReducer\"\n\nconst store = createStore(rootReducer)\n\n\nstore.subscribe(() => console.log('subscribe', store.getState()))\n\nexport default store","import React from 'react'\nimport styles from './Word.module.sass'\n\nconst Word = ({ id = 0, word = '[word]', unactive = false, isNotUse = false, onClick }) => {\n  const cls = [styles.word]\n  unactive && cls.push(styles.unactive)\n  isNotUse && cls.push(styles.isNotUse)\n  return (\n    <div\n      onClick={() => {\n        onClick(id, word)\n      }}\n      className={cls.join(' ')}\n    >\n      {word}\n    </div>\n  )\n}\n\nexport default Word","import React from 'react'\nimport styles from \"./Keyword.module.sass\"\n\nconst Keyword = ({ id = 0, keyword = '[keyword]', unactive = false }) => {\n  const cls = [styles.keyword]\n  unactive && cls.push(styles.unactive)\n  return (\n    <div className={cls.join(' ')}>\n      {keyword}\n    </div>\n  )\n}\n\nexport default Keyword","import React from 'react'\nimport cn from 'classnames'\nimport styles from './Informer.module.sass'\n\n\nconst Informer = ({minusWords = 0, activeKeywords = 0}) => {\n  return (\n    <div className={styles.informer}>\n      <h4>Результат</h4>\n      <p>Минус слова: <b>{minusWords}</b></p>\n      <p className={cn(activeKeywords===0 && styles.red)}>\n        Ключевые фразы: <b>{activeKeywords}</b>\n      </p>\n    </div>\n  )\n}\n\nexport default Informer","import React, { useState, useEffect } from 'react'\nimport { Button } from \"react-bootstrap\"\nimport cn from \"classnames\"\nimport styles from \"components/Filter/SpinButton/SpinModule.module.sass\"\n\nfunction simulateNetworkRequest() {\n  return new Promise(resolve => setTimeout(resolve, 500));\n}\n\nconst SpinButton = ({\n                      title = '[title]',\n                      loadingTitle = '[loading-title]',\n                      variant = 'outline-info',\n                      onClick,\n                      className = ''\n                    }) => {\n  const [isLoading, setLoading] = useState(false);\n\n  useEffect(() => {\n    if (isLoading) {\n      simulateNetworkRequest().then(() => {\n        setLoading(false);\n      });\n    }\n  }, [isLoading]);\n\n  return (\n    <Button\n      variant={variant}\n      onClick={() => {\n        onClick()\n        !isLoading && setLoading(true)\n      }}\n      className={cn(styles.btn, className, \"mb-2\")}\n    >\n      {isLoading ? (\n        loadingTitle\n      ) : (\n        title\n      )}\n    </Button>\n  )\n}\n\nexport default SpinButton","import React from 'react'\nimport styles from './Panel.module.sass'\nimport cn from 'classnames'\nimport { Button } from \"react-bootstrap\"\nimport Informer from \"components/Filter/Informer\"\nimport arrowDown from \"assets/download-arrow.svg\"\nimport SpinButton from \"components/Filter/SpinButton\";\n\nconst Panel = ({minusWordsCount, activeKeywordsCount, onClickInmportKeywords, onClickCopyKeywords, onClickCopyMinusWords}) => {\n  return (\n    <div className={styles.panel}>\n\n      <SpinButton\n        title=\"Импорт ключей\"\n        loadingTitle=\"Загрузка...\"\n        variant=\"outline-info\"\n        onClick={onClickInmportKeywords}\n      />\n      {/*<Button*/}\n        {/*variant=\"outline-info\"*/}\n        {/*onClick={onClickInmportKeywords}*/}\n        {/*className={cn(styles.btn, \"mb-2\")}*/}\n      {/*>Импорт ключей</Button>*/}\n\n      <img src={arrowDown} className={cn(styles.arrow, 'mb-2')}/>\n\n\n      <Informer\n        minusWords={minusWordsCount}\n        activeKeywords={activeKeywordsCount}\n      />\n\n\n      <Button\n        variant=\"outline-success\"\n        onClick={onClickCopyKeywords}\n        className={cn(styles.btn, \"mt-3\")}\n      >Скопировать ключи</Button>\n\n      <Button\n        variant=\"outline-success\"\n        onClick={onClickCopyMinusWords}\n        className={cn(styles.btn, \"mt-3\")}\n      >Скопировать минуса</Button>\n    </div>\n  )\n}\n\nexport default Panel","import React, { Component } from 'react'\nimport Word from \"components/Filter/Word\"\nimport Col from \"react-bootstrap/Col\"\nimport Row from \"react-bootstrap/Row\"\nimport Container from \"react-bootstrap/Container\"\nimport Keyword from \"components/Filter/Keyword\"\nimport Panel from \"components/Filter/Panel\"\n\nconst initialKeywords = [\n  'доставка цветов',\n  'доставка цвета',\n  'доставка цветов чита',\n  'доставка цветов недорого',\n  'заказать цветы с доставкой',\n  'заказ цветов с доставкой',\n  'доставка цветов круглосуточно',\n  'доставка цветов чита недорого',\n  'доставка цветов на дом',\n  'заказ цветов с доставкой чита',\n  'доставка цветом на дом',\n  'доставка цветов курьером',\n  'доставка цветов чита круглосуточно',\n  'заказать цветы с доставкой в чите',\n  'чита доставка цветов на дом',\n  'доставка цветов дешево',\n  'доставка цветов на дом недорого',\n  'доставка цветов в чите недорого на дом',\n  'доставка цветов в чите курьером',\n  'заказ цветов с доставкой чита недорого',\n  'заказ доставки цветов недорого',\n  'интернет доставка цветов',\n  'магазин цветов с доставкой',\n  'доставка цветов в чите курьером недорого',\n  'купить цветы с доставкой',\n  'доставка цветов каталог',\n  'доставка цветов чита дешево',\n  'телефон доставки цветов',\n  'доставка цветов круглосуточно дешево',\n  'заказать цветы с доставкой недорого',\n  'доставка цветов день в день',\n  'доставка цветов',\n  'доставка цвета',\n  'доставка цветов чита',\n  'доставка цветов недорого',\n  'заказать цветы с доставкой',\n  'заказ цветов с доставкой',\n  'доставка цветов круглосуточно',\n  'доставка цветов чита недорого',\n  'доставка цветов на дом',\n  'заказ цветов с доставкой чита',\n  'доставка цветом на дом',\n  'доставка цветов курьером',\n  'доставка цветов чита круглосуточно',\n  'заказать цветы с доставкой в чите',\n  'чита доставка цветов на дом',\n  'доставка цветов дешево',\n  'доставка цветов на дом недорого',\n  'доставка цветов в чите недорого на дом',\n  'доставка цветов в чите курьером',\n  'заказ цветов с доставкой чита недорого',\n  'заказ доставки цветов недорого',\n  'интернет доставка цветов',\n  'магазин цветов с доставкой',\n  'доставка цветов в чите курьером недорого',\n  'купить цветы с доставкой',\n  'доставка цветов каталог',\n  'доставка цветов чита дешево',\n  'телефон доставки цветов',\n  'доставка цветов круглосуточно дешево',\n  'заказать цветы с доставкой недорого',\n  'доставка цветов день в день',\n  'доставка цветов',\n  'доставка цвета',\n  'доставка цветов чита',\n  'доставка цветов недорого',\n  'заказать цветы с доставкой',\n  'заказ цветов с доставкой',\n  'доставка цветов круглосуточно',\n  'доставка цветов чита недорого',\n  'доставка цветов на дом',\n  'заказ цветов с доставкой чита',\n  'доставка цветом на дом',\n  'доставка цветов курьером',\n  'доставка цветов чита круглосуточно',\n  'заказать цветы с доставкой в чите',\n  'чита доставка цветов на дом',\n  'доставка цветов дешево',\n  'доставка цветов на дом недорого',\n  'доставка цветов в чите недорого на дом',\n\n]\n\n\nfunction getValuesByKey(key, array) {\n  return array.reduce(function (values, item) {\n    (key in item) && values.push(item[key])\n    return values\n  }, [])\n}\n\nclass Filter extends Component {\n  constructor(props) {\n    super(props)\n    this.handleWordClick = this.handleWordClick.bind(this)\n    this.handleCopyKeywords = this.handleCopyKeywords.bind(this)\n    this.handleCopyMinusWords = this.handleCopyMinusWords.bind(this)\n    this.importKeywordsFromClipboard = this.importKeywordsFromClipboard.bind(this)\n  }\n\n  state = {\n    keywords: [],\n    words: []\n  }\n\n  setKeywords(initialKeywords) {\n    const keywords = initialKeywords.map((keyword, i) => ({\n      id: i,\n      unactive: false,\n      keyword,\n    }))\n\n    this.setState({\n      keywords\n    }, () => this.setWords())\n  }\n\n  setWords() {\n    const allWords = Array.from(new Set(\n      getValuesByKey('keyword', this.state.keywords).join(' ').split(' ')\n    ))\n\n    const words = allWords.map((word, i) => ({\n      id: i,\n      unactive: false,\n      isNotUse: false,\n      word,\n    }))\n\n    this.setState({\n      words\n    })\n  }\n\n  componentDidMount() {\n    this.importSampleKeywords()\n  }\n\n  importSampleKeywords() {\n    this.setKeywords(initialKeywords)\n  }\n\n  importKeywordsFromClipboard() {\n    const app = this\n    navigator.clipboard.readText()\n      .then(text => {\n        app.setKeywords(text.split('\\n'))\n      })\n      .catch(err => {\n        // возможно, пользователь не дал разрешение на чтение данных из буфера обмена\n        // console.log('Something went wrong', err);\n        console.log('Не могу прочитать текст из буфера обмена', err)\n      })\n  }\n\n  // todo После нажатия на включение слова,\n  //  нужно проверять все слова в его ключевике на другие отключенные слова,\n  //  если они есть, не включаем его обратно\n\n  filterWords() {\n    const wordsByOnlyActiveKeywords = Array.from(new Set(\n      this.state.keywords.reduce(function (values, item) {\n        (item.unactive === false) && values.push(item.keyword)\n        return values\n      }, []).join(' ').split(' ')\n    ))\n\n    const oldWords = [...this.state.words]\n    const words = oldWords.map(item => {\n      item.isNotUse = !wordsByOnlyActiveKeywords.includes(item.word)\n      return item\n    })\n\n    this.setState({\n      words\n    })\n  }\n\n  filterKeywords(word, unactiveStatus) {\n    const keywords = this.state.keywords.map(keyword => {\n      if (keyword.keyword.trim().split(' ').includes(word)) {\n        keyword.unactive = unactiveStatus\n      }\n      return keyword\n    })\n\n    this.setState({\n      keywords\n    }, () => this.filterWords())\n  }\n\n  handleWordClick(id, word) {\n    const index = this.state.words.findIndex(word => word.id === id)\n    const status = !this.state.words[index].unactive\n\n    this.setState(prevState => {\n      const words = [...prevState.words]\n      words[index].unactive = status\n\n      return {\n        words\n      }\n    }, () => this.filterKeywords(word, status))\n  }\n\n  getMinusWords() {\n    return this.state.words.filter(word => word.unactive === true)\n  }\n\n  getActiveKeywords() {\n    return this.state.keywords.filter(keyword => keyword.unactive === false)\n  }\n\n  convertMinusWordsToText(words) {\n    return words.map(word => word.word).join('\\r')\n  }\n\n  convertActiveKeywordsToText(keywords) {\n    return keywords.map(word => word.keyword).join('\\r')\n  }\n\n  copyToClipboard(text) {\n    const textField = document.createElement('textarea')\n    textField.value = text !== '' ? text : 'нет минус слов'\n    document.body.appendChild(textField)\n    textField.select()\n    document.execCommand('copy')\n    textField.remove()\n  }\n\n  handleCopyKeywords() {\n    this.copyToClipboard(this.convertActiveKeywordsToText(this.getActiveKeywords()))\n  }\n\n  handleCopyMinusWords() {\n    this.copyToClipboard(this.convertMinusWordsToText(this.getMinusWords()))\n  }\n\n  render() {\n    const { keywords, words } = this.state\n    const minusWords = this.getMinusWords()\n    const activeKeywords = this.getActiveKeywords()\n    return (\n      <>\n        <Panel\n          minusWordsCount={minusWords.length}\n          activeKeywordsCount={activeKeywords.length}\n          onClickCopyKeywords={this.handleCopyKeywords}\n          onClickCopyMinusWords={this.handleCopyMinusWords}\n          onClickInmportKeywords={this.importKeywordsFromClipboard}\n        />\n        <Container>\n          <Row>\n            <Col md={7}>\n              <h6>Ключевые фразы</h6>\n              <hr/>\n              {keywords.map(keyword =>\n                <Keyword\n                  key={keyword.id}\n                  {...keyword}\n                />\n              )}\n            </Col>\n            <Col md={3}>\n              <h6>Минус слова</h6>\n              <hr/>\n              {words.map(word =>\n                <Word\n                  key={word.id}\n                  onClick={this.handleWordClick}\n                  {...word}\n                />\n              )}\n            </Col>\n          </Row>\n        </Container>\n      </>\n    )\n  }\n}\n\nexport default Filter","import React from 'react'\nimport { Provider } from 'react-redux'\nimport store from 'store/configStore'\n// import MenuLayout from 'layouts/MenuLayout'\nimport './App.css'\n// import Creator from \"pages/Creator\";\nimport Filter from \"pages/Filter\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      {/*<Creator/>*/}\n      <Filter/>\n\n      {/*<MenuLayout>*/}\n      {/*</MenuLayout>*/}\n      {/*<Router>*/}\n\n      {/*<Switch>*/}\n      {/*<Route path={'/title'} component={Titles}/>*/}\n      {/*<Route path={'/ads'} component={Ads}/>*/}\n      {/*<Route path={'/'} component={Titles}/>*/}\n      {/*</Switch>*/}\n      {/*</MenuLayout>*/}\n      {/*</Router>*/}\n    </Provider>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import App from 'reduxLearn/App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"panel\":\"Panel_panel__2SoMq\",\"btn\":\"Panel_btn__1JC6_\",\"arrow\":\"Panel_arrow__3KcC4\"};"],"sourceRoot":""}